services:
  api:
    build:
      context: .
      dockerfile: core-api/Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SCHEMA: ${DB_SCHEMA}
      OCR_URL: ${OCR_URL}
    depends_on:
      postgres:
        condition: service_healthy
      ocr-service:
        condition: service_started
    networks:
      - SmartSpend
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - psql_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - SmartSpend
  ocr-service:
    build:
      context: ./ocr-service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - SmartSpend

volumes:
  psql_volume:
networks:
  SmartSpend:
